{"version":3,"sources":["assets/logo.svg","components/NavBar/NavBar.tsx","services/api.tsx","redux/actions/actionTypes.ts","redux/actions/actionCreators.ts","components/SimilarTitles/SimilarTitles.tsx","components/MovieDetails/MovieDetails.tsx","components/MoviesList/MoviesList.tsx","components/NotFound/NotFound.tsx","components/TvShowDetails/TvShowDetail.tsx","components/TvShowsList/TvShowsList.tsx","redux/reducers/moviesReducer.ts","redux/reducers/similarTitlesReducer.ts","redux/reducers/tvShowsReducer.ts","redux/reducers/titleDetailsReducer.ts","redux/reducers/index.ts","redux/store/index.ts","App.tsx","index.tsx"],"names":["NavBar","className","to","src","logo","alt","URL_BASE_MOVIEDB","process","URL_TRENDING_MOVIES","URL_TRENDING_TVSHOWS","KEY","api","movies","fetch","url_movies_endpoint","axios","get","data","results","Error","tvShows","url_tvShows_endpoint","details","titleId","mediaType","url_titleDetail_endpoint","similarTitles","url_similarTitles_endpoint","actionTypes","LOAD_MOVIES","LOAD_MOVIES_ERROR","LOAD_TVSHOWS","LOAD_TVSHOWS_ERROR","LOAD_SIMILAR_TITLES","LOAD_SIMILAR_TITLES_ERROR","LOAD_DETAILS","LOAD_DETAILS_ERROR","loadDetailsById","dispatch","a","titleDetails","type","SimilarTitles","setCurrentId","titles","useSelector","store","useDispatch","useEffect","loadSimilarTitles","slice","map","id","poster_path","onClick","handleSimilarTitleDetail","MovieDetails","movieId","useParams","useState","currentId","title","overview","vote_average","runtime","release_date","MoviesList","NotFound","TvShowDetail","tvShowId","name","number_of_seasons","next_episode_to_air","air_date","TvShowsList","moviesReducer","action","updateMovies","similarTitlesReducer","updateSimilarTitles","tvShowsReducer","updateTvShows","titleDetailsReducer","updateTitleDetails","rootReducer","combineReducers","configureStore","initialState","composeEnhanser","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed04a904.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.05b5d0a5.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.scss';\r\nimport logo from '../../assets/logo.svg';\r\n\r\nconst NavBar = () => (\r\n  <>\r\n    <nav className=\"nav-container\">\r\n      <Link className=\"logo\" to=\"/\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </Link>\r\n      <span className=\"nav-container__buttonsLinks\">\r\n        <Link to=\"/\">\r\n          Movies\r\n        </Link>\r\n      </span>\r\n      <span className=\"nav-container__buttonsLinks\">\r\n        <Link to=\"/tv\">\r\n          Tv Shows\r\n        </Link>\r\n      </span>\r\n    </nav>\r\n  </>\r\n);\r\n\r\nexport default NavBar;\r\n","import axios from 'axios';\r\nimport { Api } from '../common/interfaces/ApiInterface';\r\nimport { ApiMovieResponse } from '../common/interfaces/MovieInterfaces';\r\nimport { ApiSimilarTitlesResponse } from '../common/interfaces/SimilarTitlesInterfaces';\r\nimport { ApiTvShowResponse } from '../common/interfaces/TvShowsInterfaces';\r\nimport { TitleDetails } from '../common/interfaces/TitleDetailsInterfaces';\r\n\r\nconst URL_BASE_MOVIEDB = process.env.REACT_APP_URL_BASE_MOVIEDB;\r\nconst URL_TRENDING_MOVIES = `${URL_BASE_MOVIEDB}/trending/movie/week`;\r\nconst URL_TRENDING_TVSHOWS = `${URL_BASE_MOVIEDB}/trending/tv/week`;\r\nconst KEY = process.env.REACT_APP_KEY;\r\n\r\nexport const api:Api = {\r\n  movies: {\r\n    async fetch() {\r\n      const url_movies_endpoint = `${URL_TRENDING_MOVIES}?api_key=${KEY}`;\r\n      try {\r\n        const { data } = await axios.get<ApiMovieResponse>(url_movies_endpoint);\r\n        const movies = data.results;\r\n        return movies;\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    },\r\n  },\r\n  tvShows: {\r\n    async fetch() {\r\n      const url_tvShows_endpoint = `${URL_TRENDING_TVSHOWS}?api_key=${KEY}`;\r\n      try {\r\n        const { data } = await axios.get<ApiTvShowResponse>(url_tvShows_endpoint);\r\n        const tvShows = data.results;\r\n        return tvShows;\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    },\r\n  },\r\n  details: {\r\n    async fetch(titleId:number, mediaType:string) {\r\n      const url_titleDetail_endpoint = `${URL_BASE_MOVIEDB}/${mediaType}/${titleId}?api_key=${KEY}&language=en-US`;\r\n\r\n      try {\r\n        const { data } = await axios.get<TitleDetails>(url_titleDetail_endpoint);\r\n        return data;\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    },\r\n  },\r\n  similarTitles: {\r\n    async fetch(titleId:number, mediaType:string) {\r\n      const url_similarTitles_endpoint = `${URL_BASE_MOVIEDB}/${mediaType}/${titleId}/similar?api_key=${KEY}`;\r\n      try {\r\n        const { data } = await axios.get<ApiSimilarTitlesResponse>(url_similarTitles_endpoint);\r\n        const similarTitles = data.results;\r\n        return similarTitles;\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\nexport default api;\r\n","const actionTypes = {\r\n  LOAD_MOVIES: 'LOAD_MOVIES',\r\n  LOAD_MOVIES_ERROR: 'LOAD_MOVIES_ERROR',\r\n\r\n  LOAD_TVSHOWS: 'LOAD_TVSHOWS',\r\n  LOAD_TVSHOWS_ERROR: 'LOAD_TVSHOWS_ERROR',\r\n\r\n  LOAD_SIMILAR_TITLES: 'LOAD_SIMILAR_TITLES',\r\n  LOAD_SIMILAR_TITLES_ERROR: 'LOAD_SIMILAR_TITLES_ERROR',\r\n\r\n  LOAD_DETAILS: 'LOAD_DETAILS',\r\n  LOAD_DETAILS_ERROR: 'LOAD_DETAILS_ERROR',\r\n};\r\n\r\nexport default actionTypes;\r\n","import { Dispatch } from 'redux';\r\nimport api from '../../services/api';\r\nimport actionTypes from './actionTypes';\r\n\r\nexport const loadMovies = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    const movies = await api.movies.fetch();\r\n    dispatch({\r\n      type: actionTypes.LOAD_MOVIES,\r\n      movies,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.LOAD_MOVIES_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\nexport const loadTvShows = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    const tvShows = await api.tvShows.fetch();\r\n    dispatch({\r\n      type: actionTypes.LOAD_TVSHOWS,\r\n      tvShows,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.LOAD_TVSHOWS_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\nexport const loadDetailsById = (titleId: number, mediaType: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const titleDetails = await api.details.fetch(titleId, mediaType);\r\n    dispatch({\r\n      type: actionTypes.LOAD_DETAILS,\r\n      titleDetails,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.LOAD_DETAILS_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\nexport const loadSimilarTitles = (titleId:number, mediaType:string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const similarTitles = await api.similarTitles.fetch(titleId, mediaType);\r\n    dispatch({\r\n      type: actionTypes.LOAD_SIMILAR_TITLES,\r\n      similarTitles,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.LOAD_SIMILAR_TITLES_ERROR,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { SimilarTitle } from '../../common/interfaces/SimilarTitlesInterfaces';\r\nimport { loadSimilarTitles } from '../../redux/actions/actionCreators';\r\nimport { AppState } from '../../redux/reducers';\r\nimport './SimilarTitles.css';\r\n\r\ninterface SimilarTitlesProps {\r\n  titleId: number,\r\n  mediaType: string,\r\n  setCurrentId: React.Dispatch<React.SetStateAction<number | undefined>>\r\n}\r\n\r\nconst SimilarTitles = ({ titleId, mediaType, setCurrentId }:SimilarTitlesProps):JSX.Element => {\r\n  const titles:SimilarTitle[] = useSelector((store: AppState) => store.similarTitles);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadSimilarTitles(titleId, mediaType));\r\n  }, [titleId, dispatch, mediaType]);\r\n\r\n  const handleSimilarTitleDetail = (id:number) => {\r\n    setCurrentId(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"similar-titles-container\">\r\n      <p>More like this</p>\r\n      <ul className=\"list\">\r\n        {titles.slice(0, 7).map(({ id, poster_path }:SimilarTitle) => (\r\n          <li className=\"list-item\" key={id}>\r\n            <button type=\"button\" onClick={() => handleSimilarTitleDetail(id)}>\r\n              <Link to={`/${mediaType}/details/${id}`}>\r\n                <img src={`https://image.tmdb.org/t/p/original/${poster_path}`} alt=\"movie poster\" className=\"list-item__img\" />\r\n              </Link>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimilarTitles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AppState } from '../../redux/reducers';\r\nimport { loadDetailsById } from '../../redux/actions/actionCreators';\r\nimport { Params } from '../../common/interfaces/MovieInterfaces';\r\nimport SimilarTitles from '../SimilarTitles/SimilarTitles';\r\nimport { TitleDetails } from '../../common/interfaces/TitleDetailsInterfaces';\r\nimport './MovieDetails.css';\r\n\r\nexport const MovieDetails:React.FC = () => {\r\n  const { movieId }:Params = useParams();\r\n  const [currentId, setCurrentId] = useState<number>();\r\n  const dispatch = useDispatch();\r\n\r\n  const titleDetails:TitleDetails = useSelector((store: AppState) => store.titleDetails);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadDetailsById(+movieId, 'movie'));\r\n  }, [currentId, movieId, dispatch]);\r\n\r\n  return (\r\n    <section className=\"details-container\">\r\n      <div className=\"item\">\r\n        <img src={`https://image.tmdb.org/t/p/original/${titleDetails.poster_path}`} alt=\"movie poster\" className=\"item__img\" />\r\n        <div className=\"info-container\">\r\n          <p className=\"info-container__title\">\r\n            {titleDetails.title}\r\n          </p>\r\n          <p className=\"info-container__overview\">\r\n            {titleDetails.overview}\r\n          </p>\r\n          <div className=\"info-container__extra-info\">\r\n            <p>\r\n              Ranking:\r\n              {titleDetails.vote_average}\r\n              / 10\r\n            </p>\r\n            <p>\r\n              Duration:\r\n              {titleDetails.runtime}\r\n              min\r\n            </p>\r\n            <p>\r\n              Release date:\r\n              {titleDetails.release_date}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"similar-titles-container\">\r\n        <SimilarTitles titleId={+movieId} mediaType=\"movie\" setCurrentId={setCurrentId} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Movie } from '../../common/interfaces/MovieInterfaces';\r\nimport { loadMovies } from '../../redux/actions/actionCreators';\r\nimport { AppState } from '../../redux/reducers';\r\nimport './MoviesList.css';\r\n\r\nconst MoviesList:React.FC = ():JSX.Element => {\r\n  const movies:Movie[] = useSelector((store: AppState) => store.movies);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMovies());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className=\"movieList-container\">\r\n      <div className=\"movieList-container__title\">\r\n        <h1>Trending movies</h1>\r\n      </div>\r\n      <ul className=\"list\">\r\n        {movies.map(({\r\n          id, title, poster_path, vote_average,\r\n        }:Movie) => (\r\n          <li className=\"list-item\" key={id}>\r\n            <Link to={`/movie/details/${id}`}>\r\n              <img src={`https://image.tmdb.org/t/p/original/${poster_path}`} className=\"list-item__img\" alt=\"movie poster\" />\r\n              <p className=\"list-item__title\">{title}</p>\r\n              <p className=\"list-item__rating\">\r\n                {vote_average}\r\n                / 10\r\n              </p>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NotFound.css';\r\n\r\nconst NotFound = () => (\r\n  <section className=\"notFound-container\">\r\n    <h1>Error - 404</h1>\r\n    <h3>Nothing to see here...</h3>\r\n    <Link to=\"/\">Back to safety</Link>\r\n  </section>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AppState } from '../../redux/reducers';\r\nimport { loadDetailsById } from '../../redux/actions/actionCreators';\r\nimport SimilarTitles from '../SimilarTitles/SimilarTitles';\r\nimport { TitleDetails } from '../../common/interfaces/TitleDetailsInterfaces';\r\nimport { Params } from '../../common/interfaces/TvShowsInterfaces';\r\n\r\nexport const TvShowDetail:React.FC = () => {\r\n  const { tvShowId }:Params = useParams();\r\n  const [currentId, setCurrentId] = useState<number>();\r\n  const dispatch = useDispatch();\r\n\r\n  const titleDetails:TitleDetails = useSelector((store: AppState) => store.titleDetails);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadDetailsById(+tvShowId, 'tv'));\r\n  }, [currentId, tvShowId, dispatch]);\r\n\r\n  return (\r\n    <section className=\"details-container\">\r\n      <div className=\"item\">\r\n        <img src={`https://image.tmdb.org/t/p/original/${titleDetails.poster_path}`} alt=\"tv show poster\" className=\"item__img\" />\r\n        <div className=\"info-container\">\r\n          <p className=\"info-container__title\">\r\n            {titleDetails.name}\r\n          </p>\r\n          <p className=\"info-container__overview\">\r\n            {titleDetails.overview}\r\n          </p>\r\n          <div className=\"info-container__extra-info\">\r\n            <p>\r\n              Ranking:\r\n              {titleDetails.vote_average}\r\n              / 10\r\n            </p>\r\n            <p>\r\n              Seasons:\r\n              {titleDetails.number_of_seasons}\r\n            </p>\r\n            <p>\r\n              Next episode release:\r\n              {titleDetails.next_episode_to_air?.air_date}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"similar-titles-container\">\r\n        <SimilarTitles titleId={+tvShowId} mediaType=\"tv\" setCurrentId={setCurrentId} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { TvShow } from '../../common/interfaces/TvShowsInterfaces';\r\nimport { loadTvShows } from '../../redux/actions/actionCreators';\r\nimport { AppState } from '../../redux/reducers';\r\nimport './TvShowsList.css';\r\n\r\nconst TvShowsList:React.FC = ():JSX.Element => {\r\n  const tvShows:TvShow[] = useSelector((store: AppState) => store.tvShows);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadTvShows());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className=\"TvShowsList-container\">\r\n      <div className=\"TvShowsList-container__title\">\r\n        <h1>Trending TV shows</h1>\r\n      </div>\r\n      <ul className=\"list\">\r\n        {tvShows.map(({\r\n          id, name, poster_path, vote_average,\r\n        }:TvShow) => (\r\n          <li className=\"list-item\" key={id}>\r\n            <Link to={`/tv/details/${id}`}>\r\n              <img src={`https://image.tmdb.org/t/p/original/${poster_path}`} alt=\"tv show poster\" className=\"list-item__img\" />\r\n              <p className=\"list-item__title\">{name}</p>\r\n              <p className=\"list-item__rating\">\r\n                {vote_average}\r\n                / 10\r\n              </p>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TvShowsList;\r\n","import { Movie, MovieActions } from '../../common/interfaces/MovieInterfaces';\r\nimport actionTypes from '../actions/actionTypes';\r\n\r\nfunction moviesReducer(movies = [], action:MovieActions) {\r\n  let updateMovies:Movie[] | undefined = [...movies];\r\n\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_MOVIES:\r\n      updateMovies = action.movies;\r\n      break;\r\n    case actionTypes.LOAD_MOVIES_ERROR:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return updateMovies;\r\n}\r\n\r\nexport default moviesReducer;\r\n","import { SimilarTitlesActions, SimilarTitle } from '../../common/interfaces/SimilarTitlesInterfaces';\r\nimport actionTypes from '../actions/actionTypes';\r\n\r\nfunction similarTitlesReducer(similarTitles = [], action:SimilarTitlesActions) {\r\n  let updateSimilarTitles:SimilarTitle[] | undefined = [...similarTitles];\r\n\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_SIMILAR_TITLES:\r\n      updateSimilarTitles = action.similarTitles;\r\n      break;\r\n    case actionTypes.LOAD_SIMILAR_TITLES_ERROR:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return updateSimilarTitles;\r\n}\r\n\r\nexport default similarTitlesReducer;\r\n","import { TvShow, TvShowActions } from '../../common/interfaces/TvShowsInterfaces';\r\nimport actionTypes from '../actions/actionTypes';\r\n\r\nfunction tvShowsReducer(tvShows = [], action:TvShowActions) {\r\n  let updateTvShows:TvShow[] | undefined = [...tvShows];\r\n\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_TVSHOWS:\r\n      updateTvShows = action.tvShows;\r\n      break;\r\n    case actionTypes.LOAD_TVSHOWS_ERROR:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return updateTvShows;\r\n}\r\n\r\nexport default tvShowsReducer;\r\n","import { TitleDetailsActions, TitleDetails } from '../../common/interfaces/TitleDetailsInterfaces';\r\nimport actionTypes from '../actions/actionTypes';\r\n\r\nfunction titleDetailsReducer(titleDetails:TitleDetails, action:TitleDetailsActions) {\r\n  let updateTitleDetails:TitleDetails = { ...titleDetails };\r\n\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_DETAILS:\r\n      updateTitleDetails = action.titleDetails;\r\n      break;\r\n    case actionTypes.LOAD_DETAILS_ERROR:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return updateTitleDetails;\r\n}\r\n\r\nexport default titleDetailsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport moviesReducer from './moviesReducer';\r\nimport similarTitlesReducer from './similarTitlesReducer';\r\nimport tvShowsReducer from './tvShowsReducer';\r\nimport titleDetailsReducer from './titleDetailsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  movies: moviesReducer,\r\n  tvShows: tvShowsReducer,\r\n  similarTitles: similarTitlesReducer,\r\n  titleDetails: titleDetailsReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nfunction configureStore(initialState:any) {\r\n  const composeEnhanser = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhanser(applyMiddleware(thunk)),\r\n  );\r\n}\r\n\r\nexport default configureStore;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport { MovieDetails } from './components/MovieDetails/MovieDetails';\nimport MoviesList from './components/MoviesList/MoviesList';\nimport NotFound from './components/NotFound/NotFound';\nimport { TvShowDetail } from './components/TvShowDetails/TvShowDetail';\nimport TvShowsList from './components/TvShowsList/TvShowsList';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store({})}>\n        <BrowserRouter>\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact component={MoviesList} />\n            <Route path=\"/movie/details/:movieId\" exact component={MovieDetails} />\n            <Route path=\"/tv\" exact component={TvShowsList} />\n            <Route path=\"/tv/details/:tvShowId\" exact component={TvShowDetail} />\n            <Route component={NotFound} />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}